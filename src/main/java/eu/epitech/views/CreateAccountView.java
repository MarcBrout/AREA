package eu.epitech.views;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.ui.*;

/**
 * !! DO NOT EDIT THIS FILE !!
 * <p>
 * This class is generated by Vaadin Designer and will be overwritten.
 * <p>
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { }
 */

@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class CreateAccountView extends AbsoluteLayout implements View {
        private final TextField username = new TextField("Username");
        private final TextField password = new TextField("Password");
        private final TextField confirmPassword = new TextField("Confirm Password");
        private Label labelTmp = new Label();

    public CreateAccountView() {
            setSizeFull();
            setHeight("1000px");
            setWidth("1000px");
            addComponent(username, "top: 50px; left: 50px;");
            addComponent(password, "top: 125px; left: 50px;");
            addComponent(confirmPassword, "top: 200px; left: 50px;");
            addComponent(confirmButton(), "top: 300px; left: 150px;");
        }

    @Override
    public void enter(ViewChangeListener.ViewChangeEvent event) {
        Notification.show("Welcome to the create account page :)");
    }

    private void testCreationAccount() {
        if (username.getValue().equals("") || password.getValue().equals("")
                || confirmPassword.getValue().equals("")) {
            if (getComponentCount() > 4)
                removeComponent(labelTmp);
            labelTmp.setCaption("Please fill alf fields !");
            addComponent(labelTmp, "top: 275px; left: 50px;");
        }
        else if (!password.getValue().equals(confirmPassword.getValue())) {
            if (getComponentCount() > 4)
                removeComponent(labelTmp);
            labelTmp.setCaption("These passwords don't match. Try again?");
            addComponent(labelTmp, "top: 275px; left: 50px;");
        }
        else {
            // Check if the Username already exist
            if () {

            } else {
                // Fill object UserInfo, with the username : username && the password associated : password
                getUI().getNavigator().navigateTo("login");
            }
        }
    }

    private Button confirmButton() {
        Button button = new Button("Confirm", new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent clickEvent) {
                testCreationAccount();
            }
        });
        return button;
    }
}
