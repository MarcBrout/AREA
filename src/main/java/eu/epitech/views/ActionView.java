package eu.epitech.views;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.ui.Button;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;
import eu.epitech.API.ApiUtils;
import eu.epitech.NavigatorUI;
import eu.epitech.Stock;
import eu.epitech.User;
import eu.epitech.action.AAction;

import java.util.ArrayList;

/**
 * !! DO NOT EDIT THIS FILE !!
 * <p>
 * This class is generated by Vaadin Designer and will be overwritten.
 * <p>
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class ActionView extends VerticalLayout implements View {
        private ArrayList<Button> actionsButton = new ArrayList<>();
        private int nbAction = ApiUtils.availableActions.size();
        private User user = null;

        // Set in Action View the nbAction attribute by set it with the current nbAction we have
    public ActionView() {

        addComponent(new Label("Choose an action !"));
        setSizeFull();
        setSpacing(true);
        for (AAction action : ApiUtils.availableActions) {
            actionsButton.add(actionButton(action.getName()));
        }
        for (Button button : actionsButton) {
            addComponent(button);
        }
    }

    @Override
    public void enter(ViewChangeListener.ViewChangeEvent event) {
        try {
            Stock stock = (Stock) NavigatorUI.readData(getUI());
            if (stock != null) {
                if (stock.getPrompt() != null) {
                    addComponent(new Label(stock.getPrompt()));
                }
                if (stock.getUser() != null) {
                    this.user = stock.getUser();
                } else {
                    NavigatorUI.putData(getUI(), new Stock(null, null, null, "You are not connected"));
                    getUI().getNavigator().navigateTo("");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /*
    ** The String txt correspond to the name of the action. You can add a second parameters which will can be
    * the description of the action. In this case, append this parameters to 'txt' into the Button constructor.
     */
    private Button actionButton(String txt) {
        return new Button(txt, new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent clickEvent) {
                //txt is passing in parameters on the next view

                NavigatorUI.putData(getUI(), new Stock(user, ApiUtils.createActionFromName(txt), null, null));
                getUI().getNavigator().navigateTo("reaction" + "/" + txt);
            }
        });
    }
}
