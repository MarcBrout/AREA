package eu.epitech;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Notification;
import com.vaadin.ui.declarative.Design;
import com.vaadin.ui.VerticalLayout;

import java.util.ArrayList;

/**
 * !! DO NOT EDIT THIS FILE !!
 * <p>
 * This class is generated by Vaadin Designer and will be overwritten.
 * <p>
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class ReactionView extends AbsoluteLayout implements View {
    private ArrayList<Button> reactionsButton = new ArrayList<Button>();
    private String titleAction;
    private int nbReaction = 0;

    /*
    *  With the action passing in this view, set in the ReactionView constructor the nb of reaction linked
    *  to the actual action.
     */
    public ReactionView() {
        setSizeFull();
        int maxHeight = (nbReaction + 10) * 100;
        setWidth("2000px");
        setHeight(Integer.toString(maxHeight) + "px");
        int high = 50;
        for (int i = 0; i < nbReaction; ++i)
        {
            // Set the name of the Reaction, and if you want a description of this.
            String nameReaction = "";
            String descReaction = "";
            reactionsButton.add(reactionButton(nameReaction));
        }
        for (Button button : reactionsButton) {
            addComponent(button, "top: " + Integer.toString(high) + "px; left: 1500px;");
            high += 100;
        }
    }

    /*
    * Here we're setting the big action button corresponding to the txt passing in parameters to this view
     */
    @Override
    public void enter(ViewChangeListener.ViewChangeEvent event) {
        if (event.getParameters() != null)
        {
            titleAction = event.getParameters();
            addComponent(actionButton(titleAction), "top: 50px; left: 50px;");
        }
        Notification.show("Welcome to Reaction Page :)");
    }

    private Button actionButton(String txt) {
        Button button = new Button(txt, new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent clickEvent) {
                Notification.show("Please select a valid reaction !");
            }
        });

        button.setWidth(Integer.toString((getUI().getPage().getBrowserWindowWidth()) / 2));
        button.setHeight(Integer.toString((getUI().getPage().getBrowserWindowHeight()) / 2));
        button.setResponsive(true);
        return button;
    }

    /*
    ** The String txt correspond to the name of the reaction. You can add a second parameters which will can be
    * the description of the reaction. In this case, append this parameters to 'txt' into the Button constructor.
     */
    private Button reactionButton(String txt) {
        Button button = new Button(txt, new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent clickEvent) {
                /*  We're passing in parameters to the next view the action linked to the reaction.
                *   Here we can pass the specific object Config with the specific methods situated in NavigatorView
                *   to the next view.
                */
              getUI().getNavigator().navigateTo("config" + "/" + titleAction + "-" + txt);
            }
        });
        return button;
    }
}
